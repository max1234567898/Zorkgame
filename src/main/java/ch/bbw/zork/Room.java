package ch.bbw.zork;import java.util.ArrayList;import java.util.HashMap;import java.util.List;public class Room {		private String room;	private HashMap<String, Room> exits;	private ArrayList<Item> items;	public Room(String description) {		this.room = description;		this.exits = new HashMap<String,Room>();		this.items = new ArrayList<>();	}	public void put(Room north, Room east, Room south, Room west) {		if (north != null) {			exits.put("north", north);		}		if (east != null) 			exits.put("east", east);				if (south != null) {			exits.put("south", south);		}		if (west != null) 			exits.put("west", west);			}	public String shortDescription() {		return room;	}	public String longDescription() {		String infoMessage = "You are in " + room + ".\n";		infoMessage += "Items in this room:\n";		for (Item item : items) {			infoMessage += String.format("- %s (%dg)\n",							item.getName(), 							item.getWeight());		}		infoMessage += exitString();		return infoMessage;	}	private String exitString() {		String exists = "Exits:";		for (String key : exits.keySet()) {			exists += " " + key;		}		return exists;	}	public Room nextRoom(String direction) {		return (Room) exits.get(direction);	}	public List<Item> getItems() {		return items;	}	public void add(Item item) {		if (item != null && !items.contains(item)) {			this.items.add(item);		}	}	public Item getItem(String name) {		for (Item item : items) {			if (item.getName().equals(name)) {				items.remove(item);				return item;			}		}		return null;	}}