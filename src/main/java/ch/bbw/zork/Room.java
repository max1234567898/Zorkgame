package ch.bbw.zork;import java.util.ArrayList;import java.util.HashMap;import java.util.List;public class Room {    private String description;    private HashMap<String, Room> hashmap;    private ArrayList<Item> items;    public Room(String description) {        this.description = description;        this.hashmap = new HashMap<String, Room>();        this.items = new ArrayList<>();    }    public void put(Room north, Room east, Room south, Room west) {        if (north != null) {            hashmap.put("north", north);        }        if (east != null)            hashmap.put("east", east);        if (south != null) {            hashmap.put("south", south);        }        if (west != null)            hashmap.put("west", west);    }    public String shortDescription() {        return description;    }    public String longDescription() {        String tempStr = "You are in " + description + ".\n";        tempStr += "Items in this room:\n";        for (Item item : items) {            tempStr += String.format("- %s (%dKg)\n",                    item.getName(),                    item.getWeight());            // TODO: Description ausgeben        }        tempStr += exitString();        return tempStr;    }    private String exitString() {        String returnString = "Exits:";        for (String key : hashmap.keySet()) {            returnString += " " + key;        }        return returnString;    }    public Room nextRoom(String direction) {        return (Room) hashmap.get(direction);    }    public List<Item> getItems() {        return items;    }    public void add(Item item) {        if (item != null && !items.contains(item)) {            this.items.add(item);        }    }    public Item getItem(String name) {        for (Item item : items) {            if (item.getName().equals(name)) {                items.remove(item);                return item;            }        }        return null;    }}